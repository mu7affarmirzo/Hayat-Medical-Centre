from django.contrib.auth.decorators import login_requiredfrom django.db.models import Sumfrom django.http import JsonResponsefrom django.shortcuts import get_object_or_404from django.shortcuts import render, redirectfrom django.views.decorators.csrf import csrf_exemptfrom django.views.generic import TemplateViewfrom apps.warehouse.forms import AddItemToChequeFormfrom django.contrib.auth import authenticate, login, logoutfrom apps.account.models import OrganizationModel, PatientModelfrom apps.warehouse.models import *def expense_view(request):    return render(request, "expense/F-apteka-expense.html")@login_required(login_url="warehouse:warehouse-login")def create_expense_view(request):    context = {}    user = request.user    expense_obj = ExpenseModel.objects.create(created_by=user)    context['expense'] = expense_obj    return redirect('warehouse:expense-get', e_pk=expense_obj.pk)@login_required(login_url="warehouse:warehouse-login")def get_expense_view(request, e_pk):    context = {}    expense_items_summa = 0    user = request.user    expense_obj = get_object_or_404(ExpenseModel, pk=e_pk)    items = ItemsModel.objects.all()    expense_items = ExpenseItemsModel.objects.filter(expense=expense_obj)    for i in expense_items:        expense_items_summa += i.quantity * i.item.price    context['expense_obj'] = expense_obj    context['doctors'] = Account.objects.all()    context['orgs'] = OrganizationModel.objects.all()    context['items'] = items    context['expense_items'] = expense_items    context['expense_items_summa'] = expense_items_summa    return render(request, "expense/new-expense.html", context)@login_required(login_url="warehouse:warehouse-login")def expense_popup_post(request, e_pk):    if request.POST:        form = AddItemToChequeForm(request.POST)  # form cheque uchun ham bitta        expense = get_object_or_404(ExpenseModel, pk=e_pk)        if form.is_valid():            itemid = request.POST["itemid"]            item = get_object_or_404(ItemsModel, pk=itemid)            quantity = request.POST["quantity"]            expense_item = ExpenseItemsModel.objects.filter(expense=expense, item=item).first()            if expense_item:                expense_item.quantity = quantity                expense_item.save()            else:                ExpenseItemsModel.objects.create(expense=expense, quantity=quantity, item=item)    return redirect("warehouse:expense-get", e_pk)@login_required(login_url="warehouse:warehouse-login")def expense_popup_insurance_post(request, e_pk):    if request.POST:        expense = get_object_or_404(ExpenseModel, pk=e_pk)        doctor = request.POST["FIO"]        doctor = get_object_or_404(Account, pk=doctor)        expense.receiver = doctor        expense.save()    return redirect("warehouse:expense-get", e_pk)@login_required(login_url="warehouse:warehouse-login")def delete_expense(request, e_pk):    if request.POST:        expense = get_object_or_404(ExpenseModel, pk=e_pk)        expense.delete()    return redirect("warehouse:expense-create")