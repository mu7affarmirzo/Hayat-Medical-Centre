# Generated by Django 5.0.4 on 2024-06-01 06:32

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('lis', '0001_initial'),
        ('logus', '0001_initial'),
        ('warehouse', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplaintModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultingAndResearchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='1001', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisTemplateCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('room', models.CharField(max_length=255)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SummaryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TagsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToxicFactorsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChequeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.CharField(default=uuid.uuid4, max_length=255)),
                ('amount', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logus.bookingmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BasicTemplateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.diagnosistemplatecategory')),
            ],
        ),
        migrations.CreateModel(
            name='IllnessHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number', models.CharField(default=uuid.uuid4, max_length=255)),
                ('type', models.CharField(choices=[('stationary', 'stationary'), ('ambulatory', 'ambulatory')], default='stationary', max_length=15)),
                ('state', models.CharField(choices=[('open', 'open'), ('closed', 'closed')], default='open', max_length=100)),
                ('at_arrival_diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrival', to='sanatorium.diagnosistemplate')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logus.bookedroommodel')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.diagnosistemplate')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='illness_history_doctor', to=settings.AUTH_USER_MODEL)),
                ('initial_diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial', to='sanatorium.diagnosistemplate')),
                ('nurse', models.ManyToManyField(related_name='illness_history_nurse', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.patientmodel')),
                ('profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.professionsmodel')),
                ('tags', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.tagsmodel')),
                ('toxic_factors', models.ManyToManyField(to='sanatorium.toxicfactorsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='GlucometerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_glucose', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='glucometer_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='glucometer_model', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='FinalAppointmentWithDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('objective_status', models.TextField(blank=True, null=True)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('heart_beat', models.IntegerField()),
                ('arterial_high', models.IntegerField()),
                ('arterial_low', models.IntegerField()),
                ('imt', models.FloatField()),
                ('imt_interpretation', models.FloatField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('treatment_results', models.CharField(choices=[('Улучение', 'Улучение'), ('Без изменения', 'Без изменения'), ('Ухудшение', 'Ухудшение')], default='Улучение', max_length=250)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fawd_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ManyToManyField(to='sanatorium.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_fawd', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='final_appointment', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='EkgAppointmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('rhythm', models.CharField(blank=True, max_length=250, null=True)),
                ('heart_s_count', models.IntegerField(blank=True, null=True)),
                ('r_r', models.FloatField(blank=True, null=True)),
                ('p_q', models.FloatField(blank=True, null=True)),
                ('qrs', models.FloatField(blank=True, null=True)),
                ('v1', models.FloatField(blank=True, null=True)),
                ('v6', models.FloatField(blank=True, null=True)),
                ('q_t', models.FloatField(blank=True, null=True)),
                ('la', models.FloatField(blank=True, null=True)),
                ('prong_p', models.CharField(blank=True, max_length=250, null=True)),
                ('complex_qrs', models.CharField(blank=True, max_length=250, null=True)),
                ('prong_t', models.CharField(blank=True, max_length=250, null=True)),
                ('segment_st', models.CharField(blank=True, max_length=250, null=True)),
                ('electric_axis', models.CharField(blank=True, choices=[('N', 'N'), ('горизонтальная', 'горизонтальная'), ('вертикальная', 'вертикальная'), ('отклонена влево', 'отклонена влево'), ('отклонена вправо', 'отклонена вправо')], max_length=250, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ekg_app_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_ekg_app', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ekg_app', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultingWithNeurologistModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_familiar_with_anamnesis', models.BooleanField(default=False)),
                ('complaint', models.TextField(blank=True, null=True)),
                ('anamnesis', models.TextField(blank=True, null=True)),
                ('palpebral_fissures', models.CharField(blank=True, max_length=250, null=True)),
                ('pupils', models.CharField(blank=True, max_length=250, null=True)),
                ('reaction_on_pupils', models.CharField(blank=True, max_length=250, null=True)),
                ('aye_frame_movement', models.CharField(blank=True, max_length=250, null=True)),
                ('nystagmus', models.CharField(blank=True, max_length=250, null=True)),
                ('face', models.CharField(blank=True, max_length=250, null=True)),
                ('tongue', models.CharField(blank=True, max_length=250, null=True)),
                ('soft_sk', models.CharField(blank=True, max_length=250, null=True)),
                ('phonation_swallowing', models.CharField(blank=True, max_length=250, null=True)),
                ('reflexes', models.CharField(blank=True, max_length=250, null=True)),
                ('muscle_strength', models.CharField(blank=True, max_length=250, null=True)),
                ('muscle_tones', models.CharField(blank=True, max_length=250, null=True)),
                ('deep_reflexes_hand', models.CharField(blank=True, max_length=250, null=True)),
                ('deep_reflexes_foot', models.CharField(blank=True, max_length=250, null=True)),
                ('stylo_radial', models.CharField(blank=True, max_length=250, null=True)),
                ('biceps', models.CharField(blank=True, max_length=250, null=True, verbose_name='с двуглавой мышцы плеча')),
                ('triceps', models.CharField(blank=True, max_length=250, null=True, verbose_name='с трехглавой мышцы плеча')),
                ('knees', models.CharField(blank=True, max_length=250, null=True, verbose_name='коленные')),
                ('achilles', models.CharField(blank=True, max_length=250, null=True, verbose_name='ахилловы')),
                ('abdominal', models.CharField(blank=True, max_length=250, null=True, verbose_name='брюшные')),
                ('pathological_reflexes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Патологические рефлексы')),
                ('romberg_position', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='Положение в позе Ромберга')),
                ('complicated_position', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='В усложненной позе Ромберга')),
                ('finger_test', models.CharField(blank=True, default='выполняет точно', max_length=250, null=True, verbose_name='Пальценосовая проба')),
                ('heel_knee_test', models.CharField(blank=True, default='выполняет точно', max_length=250, null=True, verbose_name='Пяточно-коленная проба')),
                ('gait', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='Походка')),
                ('sensitivity', models.CharField(default='не нарушена', max_length=255)),
                ('cognitive_test', models.CharField(blank=True, max_length=255, null=True)),
                ('emotional_volitional_sphere', models.CharField(blank=True, max_length=255, null=True)),
                ('insomnia', models.CharField(blank=True, default='эпизодическая', max_length=255, null=True)),
                ('movements_in_the_cervical_spine', models.CharField(blank=True, max_length=255, null=True)),
                ('movements_in_the_spinal_spine', models.CharField(blank=True, max_length=255, null=True, verbose_name='Движения в поясничном отделе позвоночника')),
                ('spinous_processes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Болезненность при пальпации остистых отростков')),
                ('paravertebral_points', models.CharField(blank=True, max_length=255, null=True, verbose_name='Болезненность паравертебральных точек')),
                ('lasegues_symptom', models.CharField(blank=True, max_length=255, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cwn_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_cwn', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='neurologist_consulting', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultingWithCardiologistModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('has_cardio_complaints', models.BooleanField(default=False)),
                ('has_nerve_complaints', models.BooleanField(default=False)),
                ('other_complaints', models.TextField(blank=True, null=True)),
                ('history_of_illness', models.TextField(blank=True, null=True)),
                ('inheritance', models.TextField(blank=True, null=True)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('pulse_general', models.IntegerField(blank=True, null=True)),
                ('arterial_high', models.IntegerField(blank=True, null=True)),
                ('arterial_low', models.IntegerField(blank=True, null=True)),
                ('imt', models.FloatField()),
                ('imt_interpretation', models.FloatField()),
                ('body_figure', models.CharField(choices=[('правильное,', 'правильное,'), ('неправильное,', 'неправильное,'), ('астеник', 'астеник'), ('нормастеник', 'нормастеник'), ('гиперстеник', 'гиперстеник')], default='правильное, нормастеник', max_length=255)),
                ('skin', models.CharField(choices=[('нормальной окраски', 'нормальной окраски'), ('бледные', 'бледные'), ('желтушные', 'желтушные'), ('гиперемированные,', 'гиперемированные,'), ('высыпания', 'высыпания')], default='нормальной окраски', max_length=255)),
                ('sclera_visible_mucosa', models.CharField(choices=[('нормальной окраски', 'нормальной окраски'), ('бледные', 'бледные'), ('желтушные', 'желтушные'), ('гиперемированные,', 'гиперемированные,')], default='нормальной окраски', max_length=255)),
                ('thyroids', models.CharField(choices=[('не увеличена', 'не увеличена'), ('увеличена до', 'увеличена до'), ('0', '0'), ('I', 'I'), ('II ст', 'II ст')], default='не увеличена', max_length=255)),
                ('cervical', models.CharField(choices=[('не увеличены', 'не увеличены'), ('увеличены', 'увеличены'), ('мягкие', 'мягкие'), ('уплотнены при пальпации', 'уплотнены при пальпации'), ('безболезненные', 'безболезненные'), ('болезненные', 'болезненные')], default='не увеличены, мягкие, безболезненные', max_length=255)),
                ('axillary', models.CharField(choices=[('не увеличены', 'не увеличены'), ('увеличены', 'увеличены'), ('мягкие', 'мягкие'), ('уплотнены при пальпации', 'уплотнены при пальпации'), ('безболезненные', 'безболезненные'), ('болезненные', 'болезненные')], default='не увеличены, мягкие, безболезненные', max_length=255)),
                ('inguinal', models.CharField(choices=[('не увеличены', 'не увеличены'), ('увеличены', 'увеличены'), ('мягкие', 'мягкие'), ('уплотнены при пальпации', 'уплотнены при пальпации'), ('безболезненные', 'безболезненные'), ('болезненные', 'болезненные')], default='не увеличены, мягкие, безболезненные', max_length=255)),
                ('pulse_per_min', models.IntegerField(blank=True, null=True)),
                ('pulse', models.CharField(choices=[('ритмичный', 'ритмичный'), ('аритмичный', 'аритмичный'), ('напряжен', 'напряжен'), ('хорошего', 'хорошего'), ('удовлетворительного наполнения и напряжения', 'удовлетворительного наполнения и напряжения')], default='ритмичный', max_length=255)),
                ('fault_of_pulse', models.CharField(default='отсутствует', max_length=255)),
                ('heart_arterial_high', models.IntegerField()),
                ('heart_arterial_low', models.IntegerField()),
                ('left_heart_edges', models.CharField(default='в норме', max_length=255)),
                ('right_heart_edges', models.CharField(default='в норме', max_length=255)),
                ('upper_heart_edges', models.CharField(default='в норме', max_length=255)),
                ('heart_beat', models.CharField(default='в норме', max_length=255)),
                ('heart_tone', models.CharField(choices=[('чистые', 'чистые'), ('ясные', 'ясные'), ('громкие', 'громкие'), ('приглушенные', 'приглушенные'), ('глухие', 'глухие')], default='чистые, ясные', max_length=255)),
                ('i_tone', models.CharField(blank=True, choices=[('ослаблен', 'ослаблен'), ('усилен', 'усилен')], max_length=255, null=True)),
                ('ii_tone', models.CharField(blank=True, choices=[('аорте', 'аорте'), ('легочной артерии', 'легочной артерии')], max_length=255, null=True)),
                ('noise', models.CharField(blank=True, choices=[('аорте', 'аорте'), ('легочной артерии', 'легочной артерии')], max_length=255, null=True)),
                ('arterial_pulse_stop', models.CharField(blank=True, choices=[('отчетливая', 'отчетливая'), ('ослаблена', 'ослаблена'), ('отсутствует', 'отсутствует'), ('слева', 'слева'), ('справа', 'справа')], max_length=255, null=True)),
                ('varicose_veins_of_superficial_veins', models.CharField(choices=[('отсутствует', 'отсутствует'), ('слева', 'слева'), ('справа', 'справа')], default='отсутствует', max_length=255)),
                ('trophic_skin_changes', models.CharField(default='отсутствует', max_length=255)),
                ('chdd_per_minute', models.IntegerField(blank=True, null=True)),
                ('chest_shape', models.CharField(choices=[('правильная', 'правильная'), ('неправильная', 'неправильная'), ('«бочкообразная»', '«бочкообразная»')], default='правильная', max_length=255)),
                ('pulmonary_fields', models.CharField(choices=[('легочный', 'легочный'), ('с коробочным оттенком', 'с коробочным оттенком'), ('укорочение', 'укорочение'), ('притупление', 'притупление')], default='легочный', max_length=255, verbose_name='При сравнительной перкуссии над легочными полями звук')),
                ('auscultation_breathing', models.CharField(choices=[('везикулярное', 'везикулярное'), ('ослабленное', 'ослабленное'), ('жесткое', 'жесткое'), ('бронхиальное', 'бронхиальное')], default='везикулярное,', max_length=255, verbose_name='При аускультации дыхание')),
                ('wheezing', models.CharField(choices=[('отсутствуют', 'отсутствуют'), ('имеются сухие', 'имеются сухие'), ('влажные', 'влажные'), ('крепитирующие', 'крепитирующие')], default='везикулярное,', max_length=255, verbose_name='Хрипы')),
                ('pleural_friction_rub', models.CharField(blank=True, choices=[('шум трения плевры', 'шум трения плевры')], max_length=255, null=True, verbose_name='шум трения плевры')),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cw_cardio_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_cw_cardio', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cardiologist_consulting', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='BaseProcedureServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('initial', 'initial'), ('repeated_app', 'repeated_app'), ('cardiologist', 'cardiologist'), ('neurologist', 'neurologist'), ('ekg', 'ekg'), ('on_duty_doctor', 'on_duty_doctor')], max_length=50)),
                ('model_ref_id', models.BigIntegerField()),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('frequency', models.CharField(choices=[('каждый день', 'каждый день'), ('через день', 'через день')], default='каждый день', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bp_created', to=settings.AUTH_USER_MODEL)),
                ('medical_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.medicalservice')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_bp', to=settings.AUTH_USER_MODEL)),
                ('procedure_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_procedure_doctor', to='account.doctoraccountmodel')),
                ('illness_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='BasePillsInjectionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('initial', 'initial'), ('repeated_app', 'repeated_app'), ('cardiologist', 'cardiologist'), ('neurologist', 'neurologist'), ('ekg', 'ekg'), ('on_duty_doctor', 'on_duty_doctor')], max_length=50)),
                ('model_ref_id', models.BigIntegerField()),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('period_days', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('end_date', models.DateField(null=True)),
                ('frequency', models.CharField(choices=[('3 раза в день', '3 раза в день'), ('до еды', 'до еды'), ('после еды', 'после еды')], default='', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='b_pl_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_b_pl', to=settings.AUTH_USER_MODEL)),
                ('pills_injections', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.itemsmodel')),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base_pills_injections', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='BaseMedicalServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('initial', 'initial'), ('repeated_app', 'repeated_app'), ('cardiologist', 'cardiologist'), ('neurologist', 'neurologist'), ('ekg', 'ekg'), ('on_duty_doctor', 'on_duty_doctor')], max_length=50)),
                ('model_ref_id', models.BigIntegerField()),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('consulted_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_md_consulted_doctor', to='account.doctoraccountmodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='b_md_created', to=settings.AUTH_USER_MODEL)),
                ('medical_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.medicalservice')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_b_md', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='BaseLabResearchServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('initial', 'initial'), ('repeated_app', 'repeated_app'), ('cardiologist', 'cardiologist'), ('neurologist', 'neurologist'), ('ekg', 'ekg'), ('on_duty_doctor', 'on_duty_doctor')], max_length=50)),
                ('model_ref_id', models.BigIntegerField()),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched'), ('results', 'results')], default='assigned', max_length=50)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bl_created', to=settings.AUTH_USER_MODEL)),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_app', to='lis.labresearchmodel')),
                ('lab_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_lab_doctor', to='account.doctoraccountmodel')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_bl', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base_lab_research', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='ArterialPressureModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systologic', models.FloatField(blank=True, null=True)),
                ('diastologic', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arterial_pressure_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arterial_pressure', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentWithOnDutyDoctorOnArrivalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('complaints', models.TextField(blank=True, null=True)),
                ('arv_number', models.CharField(blank=True, max_length=255, null=True)),
                ('ayes_shells', models.CharField(blank=True, max_length=255, null=True)),
                ('from_to_sanatorium', models.CharField(blank=True, max_length=255, null=True)),
                ('road_crossed', models.CharField(blank=True, max_length=255, null=True)),
                ('abroad_for_last_years', models.CharField(blank=True, max_length=255, null=True)),
                ('virus_hepatitis', models.CharField(blank=True, max_length=255, null=True)),
                ('tuberculosis', models.CharField(blank=True, max_length=255, null=True)),
                ('malarias', models.CharField(blank=True, max_length=255, null=True)),
                ('venerian_illness', models.CharField(blank=True, max_length=255, null=True)),
                ('dizanteri', models.CharField(blank=True, max_length=255, null=True)),
                ('helminthic_infestations', models.CharField(blank=True, max_length=255, null=True)),
                ('had_contact_with_inf_people', models.CharField(blank=True, max_length=255, null=True)),
                ('had_stul_for', models.BooleanField(default=False)),
                ('allergy', models.CharField(blank=True, max_length=255, null=True)),
                ('meteolabilisis', models.CharField(blank=True, max_length=255, null=True)),
                ('non_carrying_prods', models.CharField(blank=True, max_length=255, null=True)),
                ('stull_issues', models.CharField(blank=True, max_length=255, null=True)),
                ('has_always_pills', models.CharField(blank=True, max_length=255, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.IntegerField(null=True)),
                ('pulse', models.CharField(blank=True, choices=[('ритмичный', 'ритмичный'), ('аритмичный', 'аритмичный')], max_length=255, null=True)),
                ('diet', models.CharField(blank=True, max_length=255, null=True)),
                ('regime', models.CharField(blank=True, choices=[('Щадящий', 'Щадящий'), ('Постельный', 'Постельный'), ('Тонизирующий', 'Тонизирующий'), ('Тренирующий', 'Тренирующий')], max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aw_on_duty_on_arr_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_aw_on_duty_on_arr', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_duty_doctor_on_arr_appointment', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentWithOnDutyDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('complaints', models.TextField(blank=True, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.FloatField(null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aw_on_duty_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_aw_on_duty', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_duty_doctor_appointment', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='InitialAppointmentWithDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='assigned', max_length=250)),
                ('complaint', models.TextField(blank=True, null=True)),
                ('anamnesis_morbi', models.TextField(blank=True, null=True)),
                ('anamnesis_vitae', models.TextField(blank=True, null=True)),
                ('contact_with_infectious', models.TextField(blank=True, null=True)),
                ('contact_with_orvi', models.BooleanField(default=False)),
                ('is_away_two_month', models.BooleanField(blank=True, default=False)),
                ('transferred_infectious', models.CharField(blank=True, max_length=255, null=True)),
                ('staying_hospital', models.CharField(blank=True, max_length=255, null=True)),
                ('receiving_blood_transfusions', models.CharField(blank=True, max_length=255, null=True)),
                ('surgical_massive_interventions_six_months', models.CharField(blank=True, max_length=255, null=True)),
                ('dentist_visits_last_six_months', models.CharField(blank=True, max_length=255, null=True)),
                ('profession_toxics', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_data', models.CharField(blank=True, max_length=255, null=True)),
                ('general_state', models.CharField(blank=True, max_length=255, null=True)),
                ('consciousness', models.CharField(blank=True, choices=[('ясное', 'ясное'), ('ступор', 'ступор'), ('сопор', 'сопор'), ('кома', 'кома')], max_length=255, null=True)),
                ('consciousness_state', models.CharField(blank=True, choices=[('ясное', 'ясное'), ('ступор', 'ступор'), ('сопор', 'сопор'), ('кома', 'кома')], max_length=255, null=True)),
                ('constitution', models.CharField(blank=True, choices=[('нормасетик', 'нормасетик'), ('аснетик', 'аснетик'), ('гиперстеник', 'гиперстеник')], max_length=255, null=True)),
                ('skin', models.CharField(blank=True, choices=[('нормальной окраски', 'нормальной окраски'), ('бледные', 'бледные'), ('гиперемия', 'гиперемия'), ('иктеричные', 'иктеричные'), ('субиктеричные', 'субиктеричные'), ('акроцианоз', 'акроцианоз'), ('земелистого цвета', 'земелистого цвета')], max_length=255, null=True)),
                ('pigmentation', models.CharField(blank=True, max_length=255, null=True)),
                ('depigmentation', models.CharField(blank=True, max_length=255, null=True)),
                ('rashes', models.CharField(blank=True, max_length=255, null=True)),
                ('vascular_changes', models.CharField(blank=True, max_length=255, null=True)),
                ('hemorrhages', models.CharField(blank=True, max_length=255, null=True)),
                ('scarring', models.CharField(blank=True, max_length=255, null=True, verbose_name='рубцы')),
                ('trophic_changes', models.CharField(blank=True, max_length=255, null=True)),
                ('visible_tumors', models.CharField(blank=True, max_length=255, null=True)),
                ('skin_moisture', models.CharField(blank=True, choices=[('обычная', 'обычная'), ('влажная', 'влажная'), ('сухая', 'сухая')], max_length=255, null=True)),
                ('skin_turgor', models.CharField(blank=True, choices=[('в норме', 'в норме'), ('снижет', 'снижет')], max_length=255, null=True)),
                ('subcutaneous_fat', models.CharField(blank=True, choices=[('развита умеренно', 'развита умеренно'), ('развита слабо', 'развита слабо'), ('развита чрезмерно', 'развита чрезмерно')], max_length=255, null=True)),
                ('temperature', models.FloatField(default=36.6)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('heart_beat', models.IntegerField()),
                ('arterial_high', models.IntegerField()),
                ('arterial_low', models.IntegerField()),
                ('imt', models.FloatField()),
                ('extra_weight', models.FloatField()),
                ('swelling_pastiness', models.CharField(blank=True, max_length=255, null=True)),
                ('lymph_nodes', models.CharField(blank=True, choices=[('не увеличены', 'не увеличены'), ('мягкие', 'мягкие'), ('плотные', 'плотные'), ('эластичные', 'эластичные')], max_length=255, null=True)),
                ('deformations', models.CharField(blank=True, max_length=255, null=True)),
                ('contractures', models.CharField(blank=True, max_length=255, null=True)),
                ('movement_restrictions', models.CharField(blank=True, max_length=255, null=True)),
                ('respiratory_frequency', models.IntegerField()),
                ('breathing_type', models.CharField(blank=True, choices=[('нет', 'нет'), ('брюшной', 'брюшной'), ('смешанный', 'смешанный')], max_length=255, null=True)),
                ('auscultative_breathing', models.CharField(blank=True, choices=[('везикулярное', 'везикулярное'), ('жестнкое', 'жестнкое'), ('ослабленное', 'ослабленное')], default='везикулярное', max_length=255, null=True)),
                ('wheezing', models.CharField(blank=True, choices=[('сухые', 'сухые'), ('влажное', 'влажное')], default='влажное', max_length=255, null=True)),
                ('coughing', models.CharField(blank=True, choices=[('сухой', 'сухой'), ('мокрый', 'мокрый')], max_length=255, null=True)),
                ('high_humidity', models.CharField(blank=True, max_length=255, null=True)),
                ('crepitus', models.CharField(blank=True, choices=[('верхная часть', 'верхная часть'), ('средняя часть', 'средняя часть'), ('нижняя часть', 'нижняя часть'), ('слева', 'слева'), ('справа', 'справа')], max_length=255, null=True)),
                ('lungs_percussion', models.CharField(blank=True, choices=[('ясный', 'ясный'), ('легочный', 'легочный'), ('приглушенный', 'приглушенный'), ('тупой', 'тупой'), ('коробочный', 'коробочный'), ('тимпанический', 'тимпанический'), ('притупленно-тимпанический', 'притупленно-тимпанический'), ('слева', 'слева'), ('справа', 'справа')], default='ясный', max_length=255, null=True)),
                ('heart_edge', models.CharField(blank=True, choices=[('расширены', 'расширены'), ('в норме', 'в норме')], default='расширены', max_length=255, null=True)),
                ('heart_tones', models.CharField(blank=True, choices=[('звучанные', 'звучанные'), ('приглушенные', 'приглушенные'), ('глухие', 'глухие'), ('ритмичные', 'ритмичные'), ('аритмичные', 'аритмичные'), ('мерцательная аритмия', 'мерцательная аритмия'), ('тахикардия', 'тахикардия'), ('брадикардия', 'брадикардия')], default='звучанные', max_length=255, null=True)),
                ('accent_in_aorta', models.CharField(blank=True, choices=[('есть', 'есть'), ('нет', 'нет'), ('патологические шумы', 'патологические шумы')], max_length=255, null=True)),
                ('noise_change_on_ot', models.CharField(blank=True, choices=[('усиливается', 'усиливается'), ('неизменяется', 'неизменяется')], max_length=255, null=True)),
                ('ad_left', models.CharField(default='130/80', max_length=255, null=True)),
                ('ad_right', models.CharField(default='130/80', max_length=255, null=True)),
                ('ps_left', models.CharField(default='75', max_length=255, null=True)),
                ('ps_right', models.CharField(default='75', max_length=255, null=True)),
                ('pulse_noise_on_arteria', models.CharField(choices=[('сонная', 'сонная'), ('подключичная', 'подключичная'), ('яремная', 'яремная'), ('тыльная', 'тыльная'), ('слева', 'слева'), ('справа', 'справа')], default='сонная', max_length=255, null=True)),
                ('appetit', models.CharField(choices=[('удовлетворительный', 'удовлетворительный'), ('снижен', 'снижен'), ('повышен', 'повышен'), ('анорексия', 'анорексия')], default='удовлетворительный', max_length=255, null=True)),
                ('tongue', models.CharField(choices=[('чистый', 'чистый'), ('влажный', 'влажный'), ('географический', 'географический'), ('облажен налетом', 'облажен налетом')], default='чистый, влажный', max_length=255, null=True)),
                ('cracks_ulcers_in_mouth', models.CharField(blank=True, choices=[('есть', 'есть')], max_length=255, null=True)),
                ('stomach', models.CharField(choices=[('мягкий', 'мягкий'), ('вздутый', 'вздутый'), ('впавшый', 'впавшый')], default='мягкий', max_length=255, null=True)),
                ('ill_part_stomach', models.CharField(blank=True, choices=[('в правом подреберье', 'в правом подреберье'), ('в гипогастрии', 'в гипогастрии'), ('по ходу толстого кишечника', 'по ходу толстого кишечника'), ('по ходу тонкого кишечника', 'по ходу тонкого кишечника'), ('вокруг пупка', 'вокруг пупка')], max_length=255, null=True)),
                ('liver', models.CharField(blank=True, choices=[('не увеличена', 'не увеличена'), ('увеличена на ', 'увеличена на ')], default='не увеличени', max_length=255, null=True)),
                ('liver_edge', models.CharField(blank=True, choices=[('острый', 'острый'), ('закругленный', 'закругленный'), ('мягкий', 'мягкий'), ('плотный', 'плотный')], max_length=255, null=True)),
                ('spleen', models.CharField(choices=[('не увеличена', 'не увеличена'), ('увеличена на ', 'увеличена на ')], default='не увеличени', max_length=255, null=True)),
                ('spleen_edge', models.CharField(blank=True, choices=[('острый', 'острый'), ('закругленный', 'закругленный'), ('мягкий', 'мягкий'), ('плотный', 'плотный')], max_length=255, null=True)),
                ('stool', models.CharField(choices=[('жидкий', 'жидкий'), ('кашицеобразный', 'кашицеобразный'), ('оформленный', 'оформленный'), ('запоры', 'запоры'), ('диарея', 'диарея')], default='запоры', max_length=255, null=True)),
                ('stool_frequency', models.CharField(default='1', max_length=255, null=True)),
                ('urinary_system', models.CharField(default='1', max_length=255, null=True)),
                ('effleurage_symptoms', models.CharField(choices=[('отрицательный', 'отрицательный'), ('положительный', 'положительный'), ('справа', 'справа'), ('слева', 'слева')], default='отрицательный', max_length=255, null=True)),
                ('thyroid', models.CharField(choices=[('без изменений', 'без изменений'), ('увеличена', 'увеличена'), ('болезненна', 'болезненна'), ('консистенция', 'консистенция')], default='без изменений', max_length=255, null=True)),
                ('nerve_system', models.CharField(choices=[('без изменений', 'без изменений'), ('увеличена', 'увеличена'), ('болезненна', 'болезненна'), ('консистенция', 'консистенция')], default='без изменений', max_length=255, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('summary', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iawd_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='init_appointment', to='sanatorium.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_iawd', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InitialAppointmentProcedureServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('frequency', models.CharField(choices=[('каждый день', 'каждый день'), ('через день', 'через день')], default='каждый день', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iaps_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('medical_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.medicalservice')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_iaps', to=settings.AUTH_USER_MODEL)),
                ('procedure_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_iaps', to='account.doctoraccountmodel')),
                ('init_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='sanatorium.initialappointmentwithdoctormodel')),
            ],
        ),
        migrations.CreateModel(
            name='InitialAppointmentPillsInjectionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('period_days', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('end_date', models.DateField(null=True)),
                ('frequency', models.CharField(choices=[('3 раза в день', '3 раза в день'), ('до еды', 'до еды'), ('после еды', 'после еды')], default='', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iapi_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_iapi', to=settings.AUTH_USER_MODEL)),
                ('pills_injections', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.itemsmodel')),
                ('init_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pills', to='sanatorium.initialappointmentwithdoctormodel')),
            ],
        ),
        migrations.CreateModel(
            name='InitialAppointmentMedicalServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched')], default='assigned', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('consulted_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_iams_consulted', to='account.doctoraccountmodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iams_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('medical_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.medicalservice')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_iams', to=settings.AUTH_USER_MODEL)),
                ('init_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_services', to='sanatorium.initialappointmentwithdoctormodel')),
            ],
        ),
        migrations.CreateModel(
            name='InitialAppointmentLabResearchServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.BigIntegerField(default=0)),
                ('state', models.CharField(choices=[('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched'), ('results', 'results')], default='assigned', max_length=50)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ialr_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_research', to='sanatorium.illnesshistory')),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_init_app', to='lis.labresearchmodel')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_ialr', to=settings.AUTH_USER_MODEL)),
                ('procedure_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_ialr', to='account.doctoraccountmodel')),
                ('init_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_research', to='sanatorium.initialappointmentwithdoctormodel')),
            ],
        ),
        migrations.CreateModel(
            name='PatientDietModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food', models.CharField(max_length=150, null=True)),
                ('type', models.CharField(choices=[('regular_diet', 'regular_diet'), ('exception', 'exception'), ('allergy', 'allergy')], default='regular_diet', max_length=15)),
                ('comment', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('illness_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.patientmodel')),
            ],
        ),
        migrations.CreateModel(
            name='PivotConsultingAndResearchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consulting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.consultingandresearchmodel')),
                ('ill_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='PivotPillsDrugsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('ill_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('pills', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.itemsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureIllnessHistoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointed_time', models.DateTimeField()),
                ('state', models.CharField(choices=[('canceled', 'canceled'), ('done', 'done'), ('appointed', 'appointed'), ('not come', 'not come')], default='appointed', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointed_doctor', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_illness_modf', to=settings.AUTH_USER_MODEL)),
                ('procedure_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedure_doctor', to='account.doctoraccountmodel')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.proceduremodel')),
            ],
        ),
        migrations.CreateModel(
            name='PulseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pulse', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pulse_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pulse_model', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='RepeatedAppointmentWithDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Приём завершён', 'Приём завершён'), ('Пациент на прием не явился', 'Пациент на прием не явился'), ('Не завершено', 'Не завершено')], default='Не завершено', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('complaint', models.TextField(blank=True, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.FloatField(null=True)),
                ('cito', models.BooleanField(default=False)),
                ('summary', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rawd_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sanatorium.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repeated_appointment', to='sanatorium.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_rawd', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaturationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saturation', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='saturation_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saturation_model', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('done', 'done'), ('assigned', 'assigned'), ('cancel', 'cancel'), ("didn't come", "didn't come")], default='assigned', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_schedule_by_user', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.patientmodel')),
                ('procedure_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_procedures', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_schedule_room', to='logus.roommodel')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logus.servicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='AppWithDutyDocktor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(default=36.6)),
                ('arterial', models.CharField(max_length=10)),
                ('heart_beat', models.IntegerField()),
                ('complaint', models.ManyToManyField(related_name='apps_with_duty_doc', to='sanatorium.complaintmodel')),
                ('obj_data', models.ManyToManyField(related_name='apps_with_duty_doc_data', to='sanatorium.complaintmodel')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.diagnosistemplate')),
                ('summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sanatorium.summarymodel')),
            ],
        ),
        migrations.CreateModel(
            name='TemperatureModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temperature_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temperature', to='sanatorium.illnesshistory')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ill_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanatorium.illnesshistory')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='logus.servicemodel')),
            ],
        ),
        migrations.CreateModel(
            name='AmbulatoryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number', models.CharField(default=uuid.uuid4, max_length=255)),
                ('diagnosis', models.CharField(max_length=511)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='logus.bookedroommodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ambulatory_histories', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modf_ambulatory_by_user', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambulatory_histories', to='account.patientmodel')),
            ],
            options={
                'unique_together': {('patient', 'booking')},
            },
        ),
    ]
