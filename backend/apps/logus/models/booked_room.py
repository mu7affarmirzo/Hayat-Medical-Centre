from django.db import modelsfrom apps.account.models import Account, PatientModelfrom apps.logus.models import RoomPrice, RoomModelDISCOUNT_CHOICES = (    ("5", "5"),    ("10", "10"),    ("15", "15"),    ("20", "20"),    ("25", "25"),    ("30", "30"),)class BookedRoomModel(models.Model):    room_price = models.ForeignKey(RoomPrice, on_delete=models.SET_NULL, null=True)    room = models.ForeignKey(RoomModel, on_delete=models.SET_NULL, null=True)    patients = models.ForeignKey(PatientModel, on_delete=models.SET_NULL, null=True)    discount = models.CharField(max_length=100, choices=DISCOUNT_CHOICES, null=True, blank=True)    abs_price = models.BigIntegerField(default=0)    is_checked_out = models.BooleanField(default=False)    start_date = models.DateField()    end_date = models.DateField()    created_by = models.ForeignKey(Account, related_name="booked_room", on_delete=models.SET_NULL, null=True)    created_at = models.DateTimeField(auto_now_add=True)    modified_at = models.DateTimeField(auto_now=True)    modified_by = models.ForeignKey(Account, related_name="modf_booked_room", on_delete=models.SET_NULL, null=True)    def room_patents(self):        return {            "room_price": self.room_price.price,            "xona_raqami": self.room.room_number,            "patients_id": self.patients.id,            "patients_f_name": self.patients.f_name,            "patients_l_name": self.patients.l_name,            "patients_mid_name": self.patients.mid_name,            "patients_email": self.patients.email,            "patients_date_of_birth": self.patients.date_of_birth,            "patientshome_phone_number": self.patients.home_phone_number,            "mobile_phone_number": self.patients.mobile_phone_number,            "address": self.patients.address,            "is_active": self.patients.is_active,            "information_source": self.patients.information_source.name,            # "issued_selfpatient_group": self.patients.issued_selfpatient_group.name,            "doc_type": self.patients.doc_type,            "doc_number": self.patients.doc_number,            # "issued_self": self.patients.issued_self,            "INN": self.patients.INN,            "created_by": self.patients.created_by.username,            "created_at": self.patients.created_at,            "last_visit_at": self.patients.last_visit_at,            "modified_at": self.patients.modified_at,            "modified_by": self.patients.modified_by.username,            "organization": self.patients.organization.name,            "discount": self.discount,            "start_date": self.start_date,            "end_date": self.end_date,        }    def __str__(self):        return f"{self.room} - {self.patients}"  # - {self.room_price.tariff}"    @property    def duration(self):        if self.start_date and self.end_date:            duration = self.end_date - self.start_date            return duration.days        else:            return None