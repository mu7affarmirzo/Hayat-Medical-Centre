from django.db import modelsfrom django.db.models.signals import post_savefrom django.dispatch import receiverfrom apps.account.models import Accountfrom apps.logus.models import ServiceModel, TariffModel, BookedRoomModelclass TariffServiceModel(models.Model):    service = models.ForeignKey(ServiceModel, on_delete=models.CASCADE)    tariff = models.ForeignKey(TariffModel, on_delete=models.CASCADE)    created_by = models.ForeignKey(Account, related_name="tariff_service", on_delete=models.SET_NULL, null=True)    created_at = models.DateTimeField(auto_now_add=True)    modified_at = models.DateTimeField(auto_now=True)    modified_by = models.ForeignKey(Account, related_name="modf_tariff_service", on_delete=models.SET_NULL, null=True)    def __str__(self):        return f"{self.tariff} - {self.service}"class AdditionallyPurchasedServicesModel(models.Model):    service = models.ForeignKey(ServiceModel, on_delete=models.CASCADE, related_name='purchased_services')    service_price = models.BigIntegerField(default=0)    booked_room = models.ForeignKey(BookedRoomModel, on_delete=models.CASCADE, related_name='purchased_services', null=True)    is_paid = models.BooleanField(default=False)    quantity = models.PositiveIntegerField(default=1)    created_by = models.ForeignKey(Account, related_name="purchased_services", on_delete=models.SET_NULL, null=True)    created_at = models.DateTimeField(auto_now_add=True)    modified_at = models.DateTimeField(auto_now=True)    modified_by = models.ForeignKey(Account, related_name="modf_purchased_services", on_delete=models.SET_NULL,                                    null=True)    def __str__(self):        return f"{self.service} - {self.booked_room}"@receiver(post_save, sender=AdditionallyPurchasedServicesModel)def service_price_add(sender, instance: AdditionallyPurchasedServicesModel = None, created=False, **kwargs):    if created:        instance.service_price = instance.service.price        instance.save(update_fields=["service_price"])