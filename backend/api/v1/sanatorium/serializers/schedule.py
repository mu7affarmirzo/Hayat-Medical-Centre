from rest_framework import serializersfrom api.v1.logus.serializers import ServiceModelSerializer, RoomModelSerializerfrom api.v1.organizations.serializers import PatientModelSerializerfrom apps.sanatorium.models import ScheduleModelclass ScheduleModelSerializer(serializers.ModelSerializer):    service = ServiceModelSerializer()    patient = PatientModelSerializer()    room = RoomModelSerializer()    statuses_count = serializers.SerializerMethodField("statuses_count_method")    class Meta:        model = ScheduleModel        exclude = ["modified_by", "created_by", "modified_at", "created_at"]    def statuses_count_method(self, obj: ScheduleModel):        overall = ScheduleModel.objects.filter(illness_history=obj.illness_history, service=obj.service,                                            patient=obj.patient)        done_count = overall.filter(status="done").count()        overall_count = overall.count()        return {"done_count": done_count, "overall_count": overall_count}class ListSchedulesOfDoctorSerializer(serializers.ModelSerializer):    class Meta:        model = ScheduleModel        fields = "__all__"class CreateScheduleSerializer(serializers.ModelSerializer):    class Meta:        model = ScheduleModel        exclude = ["modified_by", "created_by", "modified_at", "created_at", "status"]class GetScheduleSerializer(serializers.Serializer):    start = serializers.DateField(required=False)class UpdateStatusScheduleSerializer(serializers.Serializer):    status = serializers.ChoiceField(choices=["done", "cancel", "didn't come"])