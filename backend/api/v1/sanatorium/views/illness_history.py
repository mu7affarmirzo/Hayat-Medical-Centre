from django.db.models import Qfrom drf_yasg.utils import swagger_auto_schemafrom rest_framework.decorators import permission_classes, api_viewfrom rest_framework.generics import get_object_or_404from rest_framework.permissions import IsAuthenticatedfrom rest_framework.response import Responsefrom api.v1.sanatorium.serializers import IllnessHistorySerializer, SearchtSerializer, IllnessHistoryUpdateSerializerfrom apps.sanatorium.models import IllnessHistory@swagger_auto_schema(tags=['sanatorium'], method="get")@api_view(['GET', ])@permission_classes((IsAuthenticated,))def illness_history_view(request):    ill_his = IllnessHistory.objects.all()    serializer = IllnessHistorySerializer(ill_his, many=True)    return Response(serializer.data)@swagger_auto_schema(tags=['sanatorium'], method="get")@api_view(['GET', ])@permission_classes((IsAuthenticated,))def illness_history_id_view(request, pk):    ill_his = get_object_or_404(IllnessHistory, pk=pk)    serializer = IllnessHistorySerializer(ill_his)    return Response(serializer.data)@swagger_auto_schema(tags=['sanatorium'], method="get")@api_view(['GET', ])@permission_classes((IsAuthenticated,))def illness_history_id_view(request, pk):    ill_his = get_object_or_404(IllnessHistory, pk=pk)    serializer = IllnessHistorySerializer(ill_his)    return Response(serializer.data)@swagger_auto_schema(tags=['sanatorium'], method="post", request_body=SearchtSerializer)@api_view(['POST', ])@permission_classes((IsAuthenticated,))def illness_history_search_view(request):    word = request.data["word"]    illness_histories = IllnessHistory.objects.filter(        Q(series_number__icontains=word) | Q(patient__f_name__icontains=word) | Q(patient__l_name__icontains=word) | Q(            patient__mobile_phone_number__icontains=word) | Q(patient__doc_number__icontains=word))    serializer = IllnessHistorySerializer(illness_histories, many=True)    return Response(serializer.data)@swagger_auto_schema(tags=['sanatorium'], method="put")@api_view(['PUT', ])@permission_classes((IsAuthenticated,))def illness_history_update_view(request, pk):    ill_his = get_object_or_404(IllnessHistory, pk=pk)    serializer = IllnessHistoryUpdateSerializer(ill_his, data=request.data)    if serializer.is_valid():        serializer.save()        return Response(serializer.data)    return Response(serializer.errors)