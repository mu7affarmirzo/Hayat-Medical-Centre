from drf_yasg.utils import swagger_auto_schemafrom rest_framework import statusfrom rest_framework.decorators import api_view, permission_classesfrom rest_framework.permissions import IsAuthenticatedfrom rest_framework.response import Responsefrom django.shortcuts import get_object_or_404from apps.logus.models import TariffTypePriceModelfrom api.v1.logus.serializers import TariffTypePriceSerializer@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="get", tags=["logus-tariff-type-price"])@api_view(['GET'])def get_tariff_type_price_view(request):    tariff_type_prices = TariffTypePriceModel.objects.all()    serializer = TariffTypePriceSerializer(tariff_type_prices, many=True)    return Response(serializer.data)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="get", tags=["logus-tariff-type-price"])@api_view(['GET'])def get_tariff_type_price_retrieve_view(request, pk):    tariff_type_price = get_object_or_404(TariffTypePriceModel, pk=pk)    serializer = TariffTypePriceSerializer(tariff_type_price)    return Response(serializer.data)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="post", tags=["logus-tariff-type-price"], request_body=TariffTypePriceSerializer)@api_view(['POST'])def create_tariff_type_price_view(request):    tariff_type_price = TariffTypePriceModel.objects.create(created_by=request.user, modified_by=request.user)    serializer = TariffTypePriceSerializer(tariff_type_price, data=request.data)    if serializer.is_valid():        serializer.save()        return Response(serializer.data, status=status.HTTP_201_CREATED)    return Response(status=status.HTTP_400_BAD_REQUEST)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="put", tags=["logus-tariff-type-price"], request_body=TariffTypePriceSerializer)@api_view(['PUT'])def update_tariff_type_price_view(request, pk):    tariff_type_price = get_object_or_404(TariffTypePriceModel, pk=pk)    tariff_type_price.modified_by = request.user    tariff_type_price.save()    serializer = TariffTypePriceSerializer(tariff_type_price, data=request.data)    if serializer.is_valid():        serializer.save()        return Response(serializer.data, status=status.HTTP_201_CREATED)    return Response(status=status.HTTP_400_BAD_REQUEST)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="delete", tags=["logus-tariff-type-price"])@api_view(['DELETE'])def delete_tariff_type_price_view(request, pk):    tariff_type_price = get_object_or_404(TariffTypePriceModel, pk=pk)    tariff_type_price.delete()    return Response(status=status.HTTP_204_NO_CONTENT)