from rest_framework import serializersfrom api.v1.organizations.serializers import PatientModelSerializerfrom apps.logus.models import RoomModel, BookedRoomModelclass RoomModelSerializer(serializers.ModelSerializer):    patient = serializers.SerializerMethodField("get_patient")    live_date = serializers.SerializerMethodField("get_live_date")    class Meta:        model = RoomModel        exclude = ["modified_by", "created_by"]    def get_patient(self, obj):        booked_room = BookedRoomModel.objects.filter(is_checked_out=False, room=obj)        if booked_room.exists():            return PatientModelSerializer(booked_room.first().patients).data        return None    def get_live_date(self, obj):        context = {}        booked_room = BookedRoomModel.objects.filter(is_checked_out=False, room=obj)        if booked_room.exists():            context["start_date"] = booked_room.first().start_date            context["end_date"] = booked_room.first().end_date            return context        return None