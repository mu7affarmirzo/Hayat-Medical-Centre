from rest_framework import serializersfrom apps.logus.models.room import VIEW_CHOICEfrom apps.logus.models import RoomPriceclass RoomPriceSerializer(serializers.ModelSerializer):    # tariff = TariffModelSerializer()    # room_type = RoomTypeModelSerializer()    tariff = serializers.SerializerMethodField("room_tariff")    room_type = serializers.SerializerMethodField("get_room_type")    class Meta:        model = RoomPrice        exclude = ["modified_by", "created_by", "created_at", "modified_at"]    def room_tariff(self, obj: RoomPrice):        return obj.tariff.name    def get_room_type(self, obj: RoomPrice):        return obj.room_type.nameclass RoomsWithTariffType(serializers.Serializer):    tariff = serializers.CharField()    type = serializers.CharField()    view = serializers.ChoiceField(choices=VIEW_CHOICE, required=False)    floor = serializers.IntegerField(min_value=1, required=False)class DaysGetSerializer(serializers.Serializer):    days = serializers.IntegerField()