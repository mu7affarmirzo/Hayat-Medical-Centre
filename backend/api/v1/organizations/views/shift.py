from django.shortcuts import get_object_or_404from drf_yasg.utils import swagger_auto_schemafrom rest_framework import statusfrom rest_framework.decorators import api_view, permission_classesfrom rest_framework.permissions import IsAuthenticatedfrom rest_framework.response import Responsefrom api.v1.organizations.serializers.shift import ShiftModelSerializersfrom apps.account.models.shift import ShiftModel@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="get", tags=["shifts"])@api_view(['GET'])def get_shifts_view(request):    shifts = ShiftModel.objects.all()    serializer = ShiftModelSerializers(shifts, many=True)    return Response(serializer.data)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="get", tags=["shifts"])@api_view(['GET'])def get_shift_retrieve_view(request, pk):    shift = get_object_or_404(ShiftModel, pk=pk)    serializer = ShiftModelSerializers(shift)    return Response(serializer.data)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="post", tags=["shifts"], request_body=ShiftModelSerializers)@api_view(['POST'])def create_shift_view(request):    serializer = ShiftModelSerializers(data=request.data)    if serializer.is_valid():        serializer.save()        return Response(serializer.data, status=status.HTTP_201_CREATED)    return Response(status=status.HTTP_400_BAD_REQUEST)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="put", tags=["shifts"], request_body=ShiftModelSerializers)@api_view(['PUT'])def update_shift_view(request, pk):    shift = get_object_or_404(ShiftModel, pk=pk)    serializer = ShiftModelSerializers(shift, data=request.data)    if serializer.is_valid():        serializer.save()        return Response(serializer.data, status=status.HTTP_201_CREATED)    return Response(status=status.HTTP_400_BAD_REQUEST)@permission_classes((IsAuthenticated,))@swagger_auto_schema(method="delete", tags=["shifts"])@api_view(['DELETE'])def delete_shift_view(request, pk):    shift = get_object_or_404(ShiftModel, pk=pk)    shift.delete()    return Response(status=status.HTTP_204_NO_CONTENT)